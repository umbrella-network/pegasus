// source: sdk/stream/market_update_v1/response.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var sdk_core_wrappers_pb = require('../../../sdk/core/wrappers_pb.js');
goog.object.extend(proto, sdk_core_wrappers_pb);
var sdk_stream_market_update_v1_commodity_pb = require('../../../sdk/stream/market_update_v1/commodity_pb.js');
goog.object.extend(proto, sdk_stream_market_update_v1_commodity_pb);
goog.exportSymbol('proto.kaikosdk.StreamMarketUpdateResponseV1', null, global);
goog.exportSymbol('proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kaikosdk.StreamMarketUpdateResponseV1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kaikosdk.StreamMarketUpdateResponseV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kaikosdk.StreamMarketUpdateResponseV1.displayName = 'proto.kaikosdk.StreamMarketUpdateResponseV1';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.toObject = function(opt_includeInstance) {
  return proto.kaikosdk.StreamMarketUpdateResponseV1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kaikosdk.StreamMarketUpdateResponseV1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.toObject = function(includeInstance, msg) {
  var f, obj = {
    commodity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    pb_class: jspb.Message.getFieldWithDefault(msg, 3, ""),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sequenceId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    id: jspb.Message.getFieldWithDefault(msg, 7, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    tsExchange: (f = msg.getTsExchange()) && sdk_core_wrappers_pb.TimestampValue.toObject(includeInstance, f),
    tsCollection: (f = msg.getTsCollection()) && sdk_core_wrappers_pb.TimestampValue.toObject(includeInstance, f),
    tsEvent: (f = msg.getTsEvent()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateType: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kaikosdk.StreamMarketUpdateResponseV1;
  return proto.kaikosdk.StreamMarketUpdateResponseV1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kaikosdk.StreamMarketUpdateResponseV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kaikosdk.StreamMarketUpdateCommodity} */ (reader.readEnum());
      msg.setCommodity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClass(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSequenceId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 9:
      var value = new sdk_core_wrappers_pb.TimestampValue;
      reader.readMessage(value,sdk_core_wrappers_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setTsExchange(value);
      break;
    case 10:
      var value = new sdk_core_wrappers_pb.TimestampValue;
      reader.readMessage(value,sdk_core_wrappers_pb.TimestampValue.deserializeBinaryFromReader);
      msg.setTsCollection(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTsEvent(value);
      break;
    case 12:
      var value = /** @type {!proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType} */ (reader.readEnum());
      msg.setUpdateType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kaikosdk.StreamMarketUpdateResponseV1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kaikosdk.StreamMarketUpdateResponseV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommodity();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getClass();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSequenceId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTsExchange();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      sdk_core_wrappers_pb.TimestampValue.serializeBinaryToWriter
    );
  }
  f = message.getTsCollection();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      sdk_core_wrappers_pb.TimestampValue.serializeBinaryToWriter
    );
  }
  f = message.getTsEvent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType = {
  UNKNOWN: 0,
  TRADE_BUY: 1,
  TRADE_SELL: 2,
  BEST_ASK: 3,
  BEST_BID: 4,
  UPDATED_ASK: 5,
  UPDATED_BID: 6
};

/**
 * optional StreamMarketUpdateCommodity commodity = 1;
 * @return {!proto.kaikosdk.StreamMarketUpdateCommodity}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getCommodity = function() {
  return /** @type {!proto.kaikosdk.StreamMarketUpdateCommodity} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.kaikosdk.StreamMarketUpdateCommodity} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setCommodity = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string class = 3;
 * @return {string}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setClass = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string exchange = 5;
 * @return {string}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sequence_id = 6;
 * @return {string}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getSequenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setSequenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double price = 8;
 * @return {number}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional TimestampValue ts_exchange = 9;
 * @return {?proto.kaikosdk.TimestampValue}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getTsExchange = function() {
  return /** @type{?proto.kaikosdk.TimestampValue} */ (
    jspb.Message.getWrapperField(this, sdk_core_wrappers_pb.TimestampValue, 9));
};


/**
 * @param {?proto.kaikosdk.TimestampValue|undefined} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
*/
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setTsExchange = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.clearTsExchange = function() {
  return this.setTsExchange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.hasTsExchange = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TimestampValue ts_collection = 10;
 * @return {?proto.kaikosdk.TimestampValue}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getTsCollection = function() {
  return /** @type{?proto.kaikosdk.TimestampValue} */ (
    jspb.Message.getWrapperField(this, sdk_core_wrappers_pb.TimestampValue, 10));
};


/**
 * @param {?proto.kaikosdk.TimestampValue|undefined} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
*/
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setTsCollection = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.clearTsCollection = function() {
  return this.setTsCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.hasTsCollection = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp ts_event = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getTsEvent = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
*/
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setTsEvent = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.clearTsEvent = function() {
  return this.setTsEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.hasTsEvent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional StreamMarketUpdateType update_type = 12;
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType}
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.getUpdateType = function() {
  return /** @type {!proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.kaikosdk.StreamMarketUpdateResponseV1.StreamMarketUpdateType} value
 * @return {!proto.kaikosdk.StreamMarketUpdateResponseV1} returns this
 */
proto.kaikosdk.StreamMarketUpdateResponseV1.prototype.setUpdateType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


goog.object.extend(exports, proto.kaikosdk);
